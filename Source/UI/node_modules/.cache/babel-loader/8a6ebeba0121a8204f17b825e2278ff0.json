{"ast":null,"code":"var _jsxFileName = \"/home/ashwani/699/project/instiOverflow/client/src/pages/TagPage/TagPage.component.jsx\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTagPosts } from '../../redux/posts/posts.actions';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport SideBar from '../../components/sideBar/sideBar.component';\nimport PostItem from '../../components/postItem/postItem.component';\nimport RightSideBar from '../../components/rightSideBar/rightSideBar.component';\nimport Spinner from \"../../components/spinner/spinner.component\";\n\nconst TagPage = ({\n  getTagPosts,\n  post: {\n    posts,\n    loading\n  },\n  match\n}) => {\n  const location = useLocation();\n  console.log(\"this.props\", location);\n  const courseId = location.pathname.split(\"/\")[2];\n  console.log(\"courseId is\", courseId);\n  useEffect(() => {\n    getTagPosts(match.params.tagname, courseId); // eslint-disable-next-line\n  }, [getTagPosts]);\n  return loading || posts === null ? /*#__PURE__*/React.createElement(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mainbar\",\n    className: \"questions-page fc-black-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questions-headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"Questions tagged [\", match.params.tagname, \"]\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/add/question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"s-btn s-btn__primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, \"Ask Question\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"19,204,360 questions\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, posts.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: '30px 30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 49\n    }\n  }, \"There are no questions from this tag\") : posts.map(post => /*#__PURE__*/React.createElement(PostItem, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nTagPage.propTypes = {\n  getTagPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getTagPosts\n})(TagPage);","map":{"version":3,"sources":["/home/ashwani/699/project/instiOverflow/client/src/pages/TagPage/TagPage.component.jsx"],"names":["React","useEffect","Fragment","connect","PropTypes","getTagPosts","Link","useLocation","SideBar","PostItem","RightSideBar","Spinner","TagPage","post","posts","loading","match","location","console","log","courseId","pathname","split","params","tagname","length","margin","map","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect,Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTagPosts } from '../../redux/posts/posts.actions';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport SideBar from '../../components/sideBar/sideBar.component';\nimport PostItem from '../../components/postItem/postItem.component';\nimport RightSideBar from '../../components/rightSideBar/rightSideBar.component';\nimport Spinner from \"../../components/spinner/spinner.component\";\n\nconst TagPage = ({ getTagPosts, post: { posts, loading }, match  }) => {\n    const location = useLocation();\n    console.log(\"this.props\",location);\n    const courseId=location.pathname.split(\"/\")[2];\n    console.log(\"courseId is\",courseId)\n    useEffect(() => {\n        getTagPosts(match.params.tagname,courseId);\n        // eslint-disable-next-line\n    }, [getTagPosts]);\n\n    return loading || posts === null ? <Spinner type='page' width='75px' height='200px'/> : <Fragment>\n        <div className='page'>\n            <SideBar/>\n\n            <div id=\"content\">\n                <div id='mainbar' className='questions-page fc-black-800'>\n                    <div className='questions-grid'>\n                        <h3 className='questions-headline'>Questions tagged [{match.params.tagname}]</h3>\n                        <div className='questions-btn'>\n                            <Link to='/add/question'>\n                                <button className = 's-btn s-btn__primary'>Ask Question</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className='questions-tabs'>\n                        <span>19,204,360 questions</span>\n                    </div>\n                    <div className='questions'>\n                        {posts.length === 0 ? ( <h4 style={{margin: '30px 30px'}}>There are no questions from this tag</h4> ) :\n                            posts.map(post => (\n                                <PostItem key={post.id} post={post} />\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Fragment>\n\n\n};\n\n\nTagPage.propTypes = {\n    getTagPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getTagPosts })(TagPage);"]},"metadata":{},"sourceType":"module"}