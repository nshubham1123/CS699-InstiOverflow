{"ast":null,"code":"var _jsxFileName = \"/home/ashwani/699/project/Stack-Overflow-Clone/client/src/pages/PostForm/PostForm.component.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { addPost } from '../../redux/posts/posts.actions';\nimport { useLocation } from 'react-router-dom';\nimport './PostForm.styles.scss';\nimport Spinner from \"../../components/spinner/spinner.component\";\n\nconst PostForm = ({\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  addPost\n}) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    body: '',\n    tagname: '',\n    courseId: ''\n  });\n  const {\n    title,\n    body,\n    tagname\n  } = formData;\n  const location = useLocation();\n  console.log(\"this.props\", location);\n  const courseId = location.pathname.split(\"/\")[2];\n  console.log(\"courseId\", courseId);\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    addPost({\n      title,\n      body,\n      tagname,\n      co\n    });\n    setFormData({\n      title: '',\n      body: '',\n      tagname: ''\n    });\n  };\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return loading === null ? /*#__PURE__*/React.createElement(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 84\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form-headline fc-black-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Ask a public question\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postform\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form p16 s-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label s-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, \"Title\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title-desc fw-normal fs-caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }\n  }, \"Be specific and imagine you\\u2019re asking a question to another person\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"title-input s-input\",\n    type: \"text\",\n    name: \"title\",\n    value: title,\n    onChange: e => onChange(e),\n    id: \"title\",\n    placeholder: \"e.g. Is there an R function for finding the index of an element in a vector?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label s-label fc-black-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }, \"Body\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"body-desc fw-normal fs-caption fc-black-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 45\n    }\n  }, \"Include all the information someone would need to answer your question\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"s-textarea\",\n    name: \"body\",\n    cols: \"30\",\n    rows: \"12\",\n    value: body,\n    onChange: e => onChange(e),\n    placeholder: \"Enter body with minimum 30 characters\",\n    id: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tag-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label s-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, \"Tag Name\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tag-desc fw-normal fs-caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }, \"Add up to 5 tags to describe what your question is about\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"tag-input s-input\",\n    type: \"text\",\n    name: \"tagname\",\n    value: tagname,\n    onChange: e => onChange(e),\n    id: \"tagname\",\n    placeholder: \"e.g. (ajax django string)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-button mt32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"s-btn s-btn__primary\",\n    id: \"submit-button\",\n    name: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, \"Post your question\")))), /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"s-sidebarwidget--header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Step 1: Draft your question\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-content fc-black-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sec1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, \"The community is here to help you with specific coding, algorithm, or language problems.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sec2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 41\n    }\n  }, \"Avoid asking opinion-based questions.\")), /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"step-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://cdn.sstatic.net/Img/list-1.svg?v=e8dd475ba207\",\n    width: \"16\",\n    height: \"16\",\n    alt: \"1.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 53\n    }\n  }, \"Summarize the problem\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inst\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inst-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 61\n    }\n  }, \"Include details about your goal\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 61\n    }\n  }, \"Describe expected and actual results\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"except\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 61\n    }\n  }, \"Include any error messages\")))))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://cdn.sstatic.net/Img/list-2.svg?v=9382fc2c3631\",\n    width: \"16\",\n    height: \"16\",\n    alt: \"2.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 53\n    }\n  }, \"Summarize the problem\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inst\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inst-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"step2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 53\n    }\n  }, \"Show what you\\u2019ve tried and tell us what you found (on this site or elsewhere) and why it didn\\u2019t meet your needs. You can get better answers when you provide research.\")))), /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      borderBottomRightRadius: '3px',\n      borderBottomLeftRadius: '3px'\n    },\n    className: \"step except-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://cdn.sstatic.net/Img/list-3.svg?v=323a95564232\",\n    width: \"16\",\n    height: \"16\",\n    alt: \"3.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 53\n    }\n  }, \"Summarize the problem\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inst\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inst-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"step3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 53\n    }\n  }, \"When appropriate, share the minimum amount of code others need to reproduce your problem (also called a minimum, reproducible example)\")))))))))))));\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addPost\n})(PostForm);","map":{"version":3,"sources":["/home/ashwani/699/project/Stack-Overflow-Clone/client/src/pages/PostForm/PostForm.component.jsx"],"names":["React","Fragment","useState","connect","Redirect","PropTypes","addPost","useLocation","Spinner","PostForm","auth","isAuthenticated","loading","formData","setFormData","title","body","tagname","courseId","location","console","log","pathname","split","onChange","e","target","name","value","onSubmit","preventDefault","co","width","borderBottomRightRadius","borderBottomLeftRadius","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { addPost } from '../../redux/posts/posts.actions';\nimport { useLocation } from 'react-router-dom';\nimport './PostForm.styles.scss';\nimport Spinner from \"../../components/spinner/spinner.component\";\n\nconst PostForm = ({ auth:{ isAuthenticated, loading }, addPost }) => {\n    const [ formData, setFormData ] = useState({\n        title: '',\n        body: '',\n        tagname: '',\n        courseId:''\n    });\n\n    const { title, body, tagname } = formData;\n    const location = useLocation();\n    console.log(\"this.props\",location);\n    const courseId=location.pathname.split(\"/\")[2];\n    console.log(\"courseId\",courseId);\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        addPost({ title, body, tagname,co});\n        setFormData({\n            title: '',\n            body: '',\n            tagname: ''\n        });\n    };\n\n    if (!isAuthenticated) {\n        return <Redirect to='/login' />;\n    }\n\n    return loading === null ? <Spinner type='page' width='75px' height='200px'/> : <Fragment>\n        <div className='post-form-container'>\n            <div className='post-form-content'>\n                <div className='post-form-header'>\n                    <div className='post-form-headline fc-black-800'>\n                        Ask a public question\n                    </div>\n                </div>\n                <div className='post-form-section'>\n                    <div className='postform' style={{width: '100%'}}>\n                        <form onSubmit={e => onSubmit(e)}>\n                            <div className='question-form p16 s-card'>\n                                <div className='question-layout'>\n                                    <div className='title-grid'>\n                                        <label className='form-label s-label'>\n                                            Title\n                                            <p className='title-desc fw-normal fs-caption'>\n                                                Be specific and imagine you’re asking a question to another person\n                                            </p>\n                                        </label>\n                                        <input\n                                            className='title-input s-input'\n                                            type='text'\n                                            name='title'\n                                            value={title}\n                                            onChange={e => onChange(e)}\n                                            id='title'\n                                            placeholder='e.g. Is there an R function for finding the index of an element in a vector?'\n                                        />\n                                    </div>\n                                    <div className='body-grid'>\n                                        <label className='form-label s-label fc-black-800'>\n                                            Body\n                                            <p className='body-desc fw-normal fs-caption fc-black-800'>Include all the information someone would\n                                                need to answer your question</p>\n                                        </label>\n                                        <textarea\n                                            className='s-textarea'\n                                            name='body'\n                                            cols='30'\n                                            rows='12'\n                                            value={body}\n                                            onChange={e => onChange(e)}\n                                            placeholder='Enter body with minimum 30 characters'\n                                            id='body'\n                                        >\n                                        </textarea>\n                                    </div>\n                                    <div className='tag-grid'>\n                                        <label className='form-label s-label'>\n                                            Tag Name\n                                            <p className='tag-desc fw-normal fs-caption'>\n                                                Add up to 5 tags to describe what your question is about\n                                            </p>\n                                        </label>\n                                        <input\n                                            className='tag-input s-input'\n                                            type='text'\n                                            name='tagname'\n                                            value={tagname}\n                                            onChange={e => onChange(e)}\n                                            id='tagname'\n                                            placeholder='e.g. (ajax django string)'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='post-button mt32'>\n                                <button className='s-btn s-btn__primary' id='submit-button' name='submit-button'>Post your question</button>\n                            </div>\n                        </form>\n                    </div>\n                    <aside>\n                        <div className='right-panel'>\n                            <div className='widget'>\n                                <div className='s-sidebarwidget--header'>\n                                    Step 1: Draft your question\n                                </div>\n                                <div className='widget-content fc-black-800'>\n                                    <div className='summary'>\n                                        <p className='sec1'>\n                                            The community is here to help you with specific coding, algorithm, or language problems.\n                                        </p>\n                                        <p className='sec2'>\n                                            Avoid asking opinion-based questions.\n                                        </p>\n                                    </div>\n                                    <ol className='step-section'>\n                                        <li className='step'>\n                                            <button >\n                                                <div className='step-cell'>\n                                                    <div>\n                                                        <img src='https://cdn.sstatic.net/Img/list-1.svg?v=e8dd475ba207' width='16' height='16' alt='1.' />\n                                                    </div>\n                                                    <span>Summarize the problem</span>\n                                                </div>\n                                            </button>\n                                            <div className='inst'>\n                                                <div className='inst-content'>\n                                                    <ul>\n                                                        <li><p>Include details about your goal</p></li>\n                                                        <li><p>Describe expected and actual results</p></li>\n                                                        <li><p className='except'>Include any error messages</p></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li className='step'>\n                                            <button>\n                                                <div className='step-cell'>\n                                                    <div>\n                                                        <img src='https://cdn.sstatic.net/Img/list-2.svg?v=9382fc2c3631' width='16' height='16' alt='2.' />\n                                                    </div>\n                                                    <span>Summarize the problem</span>\n                                                </div>\n                                            </button>\n                                            <div className='inst'>\n                                                <div className='inst-content'>\n                                                    <p className='step2'>\n                                                        Show what you’ve tried and tell us what you found (on this site or elsewhere) and why it didn’t meet your needs. You can get better answers when you provide research.\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li style={{borderBottomRightRadius:'3px',borderBottomLeftRadius:'3px'}} className='step except-step'>\n                                            <button>\n                                                <div className='step-cell'>\n                                                    <div>\n                                                        <img src='https://cdn.sstatic.net/Img/list-3.svg?v=323a95564232' width='16' height='16' alt='3.' />\n                                                    </div>\n                                                    <span>Summarize the problem</span>\n                                                </div>\n                                            </button>\n                                            <div className='inst'>\n                                                <div className='inst-content'>\n                                                    <p className='step3'>\n                                                        When appropriate, share the minimum amount of code others need to reproduce your problem (also called a minimum, reproducible example)\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ol>\n                                </div>\n                            </div>\n                        </div>\n                    </aside>\n                </div>\n            </div>\n        </div>\n    </Fragment>\n};\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addPost })(PostForm);"]},"metadata":{},"sourceType":"module"}